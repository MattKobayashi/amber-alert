---
name: Build and test container image

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  REPO_NAME: mattkobayashi
  IMAGE_NAME: amber-alert

jobs:
  # create-runner:
  #   name: Create self-hosted Actions runner
  #   runs-on: ubuntu-24.04
  #   steps:
  #     - name: Create runner
  #       uses: MattKobayashi/tailscale-qemu-runner-action@v1.7.0
  #       with:
  #         gh-api-token: ${{ secrets.GH_API_TOKEN }}
  #         gha-runner-apt-mirror: http://mirror.overthewire.com.au/ubuntu/
  #         gha-runner-tz: Australia/Brisbane
  #         ssh-host: 100.102.37.118
  #         ssh-user: matthew
  #         ts-oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
  #         ts-oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
  #         ts-tag: ci
  build-test:
    name: Build and test container image
    # runs-on: self-hosted
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      packages: write
    steps:
      # Add support for more platforms with QEMU (optional)
      # https://github.com/docker/setup-qemu-action
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.2.0
      # Set up Docker Buildx
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.7.1
      # Build and export image to Docker daemon
      # https://github.com/docker/build-push-action
      - name: Build and export to Docker
        id: build-export
        uses: docker/build-push-action@v6.10.0
        with:
          load: true
          tags: "${{ env.REPO_NAME }}/${{ env.IMAGE_NAME }}:test"
      # Install uuid-runtime package
      - name: Install `uuid-runtime`
        run: |
          set -x
          sudo apt-get --yes install uuid-runtime
      # Test the built image
      - name: Test image
        run: |
          set -x
          CONTAINER_ID="$(uuidgen)"
          docker container run --attach=stdout --attach=stderr --init --name=$CONTAINER_ID --rm ${{ env.REPO_NAME }}/${{ env.IMAGE_NAME }}:test &
          sleep 60
          docker container stop $CONTAINER_ID
      # Remove the test image
      - name: Remove test image
        if: ${{ !cancelled() }}
        run: |
          set -x
          docker image rm --force ${{ steps.build-export.outputs.imageid }}
